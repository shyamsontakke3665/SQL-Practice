From Clause:
	-from caluse will start the exectuion we can pass table name as an argument in the from caluse.
	-The job from clause is to go to database, serch fro the table and put the table under exectuion.
	- Syntax:  from <table_name>;
	
Select Clause:
	- select caluse will execute after the from clause.
	- we can pass column name, or expresion or asterisk(*) as an argument in the select clause.
	- the job of select clause is to go to table which is under exectuion, select the data and display it.
	- select clause is responsible for resultant table or final output.
	- Syntax: select */[distinct]/col_name/expresion/[alias].
	
	Semicolon(;):
		- determines ends of the statement of terminute the statement.
	
	Comma(,):
		- we can pass multiple column and expresion in the select clause by seprateing them using a seprater comma.

	Asterisk(*):
		- it is used to select all or everything.
		- (*) is used to select all or everything but (*) must and should used as only argument in the select clause.
		- if you want display all the details along with some extra column an expresion we haveto follow the syntax.
		- syntax: select <table_name>.*, <col_name>/ exp[alias] from <table_name>;
		
	Expression:
		- a statement with provides a result we called as an expresion.
		- an expresion consists of two things operand, operator(+,-,*,/);
		
		operand are of two types:
			1. column_name.
			2. literals("direct value").
			
		literals are of three types
			1. Number literals.
			2. character literals.
			3. Data literals.
			
		- From this we can state that an expresion is nothing but combincation of operand as well as operator.
		
		Note:
			the character literals and date literals must and should inclosed within single qoute
			name: 'shyam';
			date: '21-feb-2002';
			
Alias:
	- it is an alternative name given to column name and expresion that for resultant table.
	- alias can provide by as single word alias,
	- alias can provides by using or without using as keyword.
	- alias can be provide as multiple word seprated by underscore(_).
	- alias can be given as string but should be enclosed withing duble qoutes (" ").
	- alias in not mandatory but always recommended to provide.
	
Distinct clause:
	- it is used to remove the duplicated and reapated value from the resultant table.
	- distinct clause should be used as first argument in select clause.
	- we can pass col_name or expresion as an argument in the distinct clause.
	- we can pass multiple column or expresion in the distinct clause whenever we are passing multiple 
	  column_name and expresion in the distinct it always remove the combincation of duplicate from all the column.

Where clause:
	- it is used to filter the records.
	- it execute row-by-row 
	- we can pass filter conditions in where clause.
	- we can pass multiple filter conditions in where clause using logical operator.
	- we can not pass alias name given in the select clause to where clause because its order of exectuion.
	syntax:
		select */[distinct]/col_name/expresion/[alias].
		from <table_name>
		where <filter cond>;
		
Group By Clause:
	- it is used to group the records.
	- it is execute row-by-row.
	- we can pass col_name and expresion as an argument in the group by clause to make the group.
	- we can pass group by expresion along with aggregate function or multirow function in the select clause.
	syntax:
		select */[distinct]/col_name/expresion/[alias].
		from <table_name>
		[where <filter cond>]
		group by <col_name / expresion>;
		 
	
	Group by Expression:
		- a column_name AND Expression used in the group by clause used to create group is called as group by expresion.
		- whatever execute after group by clause it will exectue group by group.
		- we can pass multiple column_name and expresion as an argument using seprateing by comm, 
		- if we used multiple column_name and expresion create group based on combincation of column or expresion.
		
Having Clause:
	- it is used to filter the group.
	- it exectue group-by-group.
	- we can pass group-fliter-cond as an argument in having clause.
	- having clause should be used  after the group by clause.
	- we can pass multirow function in having clause.
	- we can pass multiple group-fliter-cond in having clause using logical operator.
	Syntax:
		select <group function> / group by expresion
		from <table_name>
		[where <filter cond>]
		group by <col_name / expresion>
		having <group-fliter-cond>;
		
Order by Clause:
	- it is used to sort the data either in ascending order or descending oreder.
	- order caluse should be written in last clause in any sql statement or query.
	- it will exectue at the last that is after the select clause.
	- we can pass column_name or expresion as an argument along with  keyword[asc/ desc] in the order by clause.
	- by defult oreder by clause will sort the data in ascending order.
	- we can pass alias name given in the slect to the oreder by clause because of its order of exectuion.
	- Syntax:
		select */[distinct]/col_name/expresion/[alias].
		from <table_name>
		[where <filter cond>]
		[group by <col_name / expresion>]
		[having <group-fliter-cond>]
		order by <column_name> [asc/ desc];
	
	
			
		 
	
		

	